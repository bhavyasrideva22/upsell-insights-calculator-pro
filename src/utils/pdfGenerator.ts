
import { jsPDF } from "jspdf";
import { UpsellResults } from "./calculatorUtils";
import autoTable from "jspdf-autotable";

interface PdfOptions {
  companyName: string;
  userName?: string;
  results: UpsellResults;
  inputs: {
    currentCustomers: number;
    averageRevenue: number;
    upsellConversionRate: number;
    upsellAverageValue: number;
    growthRate: number;
    timeframe: number;
  };
}

export const generatePDF = (options: PdfOptions): string => {
  const { results, inputs, companyName, userName } = options;
  
  // Create new PDF document
  const doc = new jsPDF();
  const pageWidth = doc.internal.pageSize.getWidth();
  
  // Add header with logo and title
  doc.setFillColor(36, 94, 79); // Dark Green
  doc.rect(0, 0, pageWidth, 30, "F");
  
  doc.setTextColor(255, 255, 255);
  doc.setFont("helvetica", "bold");
  doc.setFontSize(20);
  doc.text("SaaS Upsell Revenue Analysis", 20, 20);
  
  // Add date and user info
  doc.setFont("helvetica", "normal");
  doc.setFontSize(10);
  doc.setTextColor(51, 51, 51);
  const today = new Date().toLocaleDateString('en-IN');
  doc.text(`Generated on: ${today}`, 20, 40);
  
  if (userName) {
    doc.text(`Prepared for: ${userName}`, 20, 46);
  }
  
  if (companyName) {
    doc.text(`Company: ${companyName}`, 20, 52);
  }
  
  // Add summary section
  doc.setFontSize(16);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(36, 94, 79);
  doc.text("Analysis Summary", 20, 65);
  
  doc.setFontSize(11);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(51, 51, 51);
  
  // Format currency values
  const formattedBaselineRevenue = new Intl.NumberFormat('en-IN', {
    style: 'currency', currency: 'INR', maximumFractionDigits: 0
  }).format(results.baselineRevenue);
  
  const formattedUpsellRevenue = new Intl.NumberFormat('en-IN', {
    style: 'currency', currency: 'INR', maximumFractionDigits: 0
  }).format(results.upsellRevenue);
  
  const formattedTotalRevenue = new Intl.NumberFormat('en-IN', {
    style: 'currency', currency: 'INR', maximumFractionDigits: 0
  }).format(results.totalRevenue);
  
  // Add summary content
  doc.text(`Baseline Revenue: ${formattedBaselineRevenue}`, 25, 75);
  doc.text(`Upsell Revenue: ${formattedUpsellRevenue}`, 25, 82);
  doc.text(`Total Revenue: ${formattedTotalRevenue}`, 25, 89);
  doc.text(`Upsell Percentage: ${results.upsellPercentage.toFixed(1)}%`, 25, 96);
  
  // Add input parameters section
  doc.setFontSize(16);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(36, 94, 79);
  doc.text("Input Parameters", 20, 113);
  
  doc.setFontSize(11);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(51, 51, 51);
  
  doc.text(`Current Customers: ${inputs.currentCustomers.toLocaleString('en-IN')}`, 25, 123);
  doc.text(`Average Revenue: ₹${inputs.averageRevenue.toLocaleString('en-IN')}/customer`, 25, 130);
  doc.text(`Upsell Conversion Rate: ${inputs.upsellConversionRate}%`, 25, 137);
  doc.text(`Upsell Average Value: ₹${inputs.upsellAverageValue.toLocaleString('en-IN')}`, 25, 144);
  doc.text(`Monthly Growth Rate: ${inputs.growthRate}%`, 25, 151);
  doc.text(`Timeframe: ${inputs.timeframe} months`, 25, 158);
  
  // Add monthly projection table
  doc.setFontSize(16);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(36, 94, 79);
  doc.text("Monthly Projections", 20, 175);
  
  // Table data
  const tableData = results.monthlyData.map(item => [
    item.month,
    item.customers.toLocaleString('en-IN'),
    new Intl.NumberFormat('en-IN', {
      style: 'currency', currency: 'INR', maximumFractionDigits: 0
    }).format(item.baselineRevenue),
    new Intl.NumberFormat('en-IN', {
      style: 'currency', currency: 'INR', maximumFractionDigits: 0
    }).format(item.upsellRevenue),
    new Intl.NumberFormat('en-IN', {
      style: 'currency', currency: 'INR', maximumFractionDigits: 0
    }).format(item.totalRevenue)
  ]);
  
  // Create table
  // @ts-ignore
  autoTable(doc, {
    startY: 180,
    head: [['Month', 'Customers', 'Baseline Revenue', 'Upsell Revenue', 'Total Revenue']],
    body: tableData,
    theme: 'grid',
    headStyles: { fillColor: [36, 94, 79], textColor: [255, 255, 255] },
    alternateRowStyles: { fillColor: [240, 240, 240] },
  });
  
  // Add footer note
  const footerY = doc.internal.pageSize.getHeight() - 20;
  doc.setFontSize(9);
  doc.setTextColor(128, 128, 128);
  doc.text("Generated by Upsell Insights Calculator Pro | www.upsell-insights-calculator-pro.com", pageWidth / 2, footerY, { align: "center" });
  
  // Save and return
  const pdfBase64 = doc.output('datauristring');
  return pdfBase64;
};
